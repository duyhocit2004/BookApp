<%- include('../layout/head.ejs')%>

    <body>
        <div
            class="page-loader bg-background fixed inset-0 z-[100] flex items-center justify-center transition-opacity">
            <div class="loader-spinner !w-14"></div>
        </div>
        <div
            class="enigma min-h-screen bg-[color-mix(in_oklch,_var(--color-background),_var(--color-foreground)_3%)] dark:bg-background before:bg-noise dark:before:bg-foreground/[.01] before:fixed before:inset-0 before:opacity-20 after:bg-accent after:bg-contain after:fixed after:inset-0 after:blur-xl after:opacity-[.25]">
            <div
                class="side-menu xl:ml-0 transition-[margin] duration-200 fixed top-0 left-0 z-50 group before:content-[''] before:fixed before:inset-0 before:bg-black/80 dark:before:bg-foreground/5 before:backdrop-blur before:xl:hidden after:content-[''] after:absolute after:inset-0 after:bg-background after:xl:hidden [&.side-menu--mobile-menu-open]:ml-0 [&.side-menu--mobile-menu-open]:before:block -ml-[320px] before:hidden">
                <div
                    class="close-mobile-menu fixed ml-[320px] xl:hidden z-50 cursor-pointer text-background dark:text-foreground [&.close-mobile-menu--mobile-menu-open]:block hidden">
                    <div class="ml-5 mt-5 flex size-10 items-center justify-center">
                        <i data-lucide="x"
                            class="[--color:currentColor] stroke-(--color) fill-(--color)/25 size-7 stroke-1"></i>
                    </div>
                </div>
                <!-- sidebar-Start -->
                <%- include('../layout/sidebar.ejs') %>
                    <!-- sidebar-End -->
            </div>
            <div
                class="content h-screen transition-[margin,width] duration-200 pt-32 pb-8 px-7 z-10 relative group before:absolute before:bottom-4 before:top-27 before:-ml-px before:right-4 before:opacity-[.07] before:left-4 xl:before:left-0 before:bg-foreground before:rounded-4xl after:absolute after:bottom-4 after:top-27 after:-ml-px after:right-4 after:left-4 xl:after:left-0 after:bg-[color-mix(in_oklch,_var(--color-background),_var(--color-foreground)_2%)] after:rounded-4xl after:border after:border-foreground/[.15] dark:after:opacity-[.59] xl:ml-[320px] [&.content--compact]:xl:ml-[165px]">
                <div
                    class="relative h-full [--color-nav-foreground:var(--color-background)] dark:[--color-nav-foreground:var(--color-foreground)]">
                    <div class="h-full overflow-x-hidden">
                        <div
                            class="content__scroll-area relative z-20 -mr-7 h-full overflow-y-auto pl-4 pr-11 transition-[margin] duration-200 xl:pl-0">
                            <!-- Menu-Start -->
                            <%- include('../layout/menu.ejs') %>
                                <!-- Menu_end -->
                                <div class="-mt-5" id="mt">
                                    <!-- main_start -->
                                    <div>
                                        <h2 class="mt-10 text-lg font-medium">Danh mục</h2>
                                        
                                        <!-- Notification Area -->
                                        <% if (success) { %>
                                        <div id="success-notification" class="mt-4 p-4 rounded-lg border-l-4 bg-green-50 border-green-400 text-green-700">
                                            <div class="flex">
                                                <div class="flex-shrink-0">
                                                    <i data-lucide="check-circle" class="h-5 w-5"></i>
                                                </div>
                                                <div class="ml-3">
                                                    <p class="text-sm font-medium">
                                                        <% if (success === 'add') { %>
                                                            Thêm danh mục thành công!
                                                        <% } else if (success === 'edit') { %>
                                                            Cập nhật danh mục thành công!
                                                        <% } else if (success === 'delete') { %>
                                                            Xóa danh mục thành công!
                                                        <% } %>
                                                    </p>
                                                </div>
                                                <div class="ml-auto pl-3">
                                                    <div class="-mx-1.5 -my-1.5">
                                                        <button type="button" onclick="closeNotification()" class="inline-flex rounded-md p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-green-50 focus:ring-green-600">
                                                            <i data-lucide="x" class="h-4 w-4"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <% } %>
                                        <div class="mt-5 grid grid-cols-12 gap-6">
                                            <div class="col-span-12 mt-2 flex flex-wrap items-center sm:flex-nowrap">
                                                <a href="/admin/AddCategory"
                                                    class="cursor-pointer inline-flex border items-center justify-center gap-2 whitespace-nowrap rounded-lg text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-(--color)/20 border-(--color)/60 text-(--color) hover:bg-(--color)/5 [--color:var(--color-primary)] h-10 px-4 py-2 box mr-2">
                                                    Thêm mới danh mục
                                                </a>
                                                <div data-tw-placement="bottom-end" class="dropdown">
                                                    <button
                                                        class="[--color:var(--color-foreground)] border items-center justify-center gap-2 whitespace-nowrap rounded-lg text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 text-(--color) hover:bg-(--color)/5 bg-background border-(--color)/20 h-10 py-2 dropdown-toggle inline-flex cursor-pointer relative z-[51] box px-2"
                                                        data-tw-toggle="dropdown">
                                                        <span class="flex h-5 w-5 items-center justify-center">
                                                            <i data-lucide="plus"
                                                                class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 size-4"></i>
                                                        </span>
                                                    </button>
                                                    <div
                                                        class="box before:absolute before:inset-0 before:mx-3 before:-mb-3 before:border before:border-foreground/10 before:bg-background/30 before:shadow-[0px_3px_5px_#0000000b] before:z-[-1] before:rounded-xl after:absolute after:inset-0 after:border after:border-foreground/10 after:bg-background after:shadow-[0px_3px_5px_#0000000b] after:rounded-xl after:z-[-1] after:backdrop-blur-md dropdown-menu invisible absolute z-50 p-1 opacity-0 before:backdrop-blur-xl [&.show]:visible [&.show]:opacity-100">
                                                        <div class="dropdown-content w-40">
                                                            <a
                                                                class="relative flex cursor-default select-none hover:bg-foreground/5 items-center rounded-lg px-2 py-1.5 outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50">
                                                                <i data-lucide="printer"
                                                                    class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 mr-2 size-4"></i>
                                                                Print
                                                            </a>
                                                            <a
                                                                class="relative flex cursor-default select-none hover:bg-foreground/5 items-center rounded-lg px-2 py-1.5 outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50">
                                                                <i data-lucide="file-text"
                                                                    class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 mr-2 size-4"></i>
                                                                Export to
                                                                Excel
                                                            </a>
                                                            <a
                                                                class="relative flex cursor-default select-none hover:bg-foreground/5 items-center rounded-lg px-2 py-1.5 outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50">
                                                                <i data-lucide="file-text"
                                                                    class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 mr-2 size-4"></i>
                                                                Export to
                                                                PDF
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mx-auto hidden opacity-70 md:block">
                                                    <% if (typeof searchResults !== 'undefined' && typeof searchTerm !== 'undefined' && searchTerm) { %>
                                                        Hiển thị <%= searchResults %> kết quả cho "<%= searchTerm %>"
                                                    <% } else { %>
                                                        Hiển thị <%= Category ? Category.length : 0 %> danh mục
                                                    <% } %>
                                                </div>
                                                <div class="mt-3 w-full sm:ml-auto sm:mt-0 sm:w-auto md:ml-0">
                                                    <div class="relative w-56">
                                                        <input
                                                            id="search-input"
                                                            class="h-10 rounded-md border bg-background px-3 py-2 ring-offset-background file:border-0 file:bg-transparent file:font-medium file:text-foreground placeholder:text-foreground/70 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-foreground/5 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 box w-56 pr-10"
                                                            type="text" 
                                                            placeholder="Tìm kiếm danh mục..." 
                                                            value="<%= typeof searchTerm !== 'undefined' ? searchTerm : '' %>"
                                                            autocomplete="off">
                                                        <i data-lucide="search"
                                                            class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 absolute inset-y-0 right-0 my-auto mr-3 size-4 opacity-70"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- BEGIN: Data List -->
                                            <div class="col-span-12 overflow-auto lg:overflow-visible">
                                                <div class="relative w-full overflow-auto">
                                                    <table
                                                        class="w-full caption-bottom border-separate border-spacing-y-[10px] -mt-2">
                                                        <thead class="[&_tr]:border-b-0 [&_tr_th]:h-10">
                                                            <tr
                                                                class="transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted border-b-0">
                                                                <th
                                                                    class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0">
                                                                    STT
                                                                </th>
                                                                <th
                                                                    class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0">
                                                                    NAME
                                                                </th>
                                                                <th
                                                                    class="h-12 px-4 align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 text-center">
                                                                    ACTIONS
                                                                </th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="[&_tr:last-child]:border-0">
                                                            <% if (Category && Category.length) { %>
                                                            <% Category.forEach(function(item, index) { %>
                                                            <tr class="transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted border-b-0">
                                                                <td class="shadow-[3px_3px_5px_#0000000b] first:rounded-l-xl last:rounded-r-xl box rounded-none p-4 align-middle [&:has([role=checkbox])]:pr-0 border-y border-foreground/10 bg-background first:border-l last:border-r">
                                                                    <%= index + 1 %>
                                                                </td>
                                                                <td
                                                                    class="shadow-[3px_3px_5px_#0000000b] first:rounded-l-xl last:rounded-r-xl box rounded-none p-4 align-middle [&:has([role=checkbox])]:pr-0 border-y border-foreground/10 bg-background first:border-l last:border-r">
                                                                    <div
                                                                        class="flex items-center justify-start">
                                                                        <%= item.name %>
                                                                    </div>
                                                                </td>
                                                                <td
                                                                    class="shadow-[3px_3px_5px_#0000000b] first:rounded-l-xl last:rounded-r-xl box rounded-none p-4 align-middle [&:has([role=checkbox])]:pr-0 border-y border-foreground/10 bg-background first:border-l last:border-r">
                                                                    <div class="flex items-center justify-center">
                                                                        <a class="mr-3 flex items-center" href="/admin/EditCategory/<%= item.id %>">
                                                                            <i data-lucide="check-square"
                                                                                class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 mr-1 size-4"></i>
                                                                            Edit
                                                                        </a>
                                                                        <a class="text-danger flex items-center delete-category-btn"
                                                                            data-id="<%= item.id %>"
                                                                            data-name="<%= item.name %>"
                                                                            href="#">
                                                                            <i data-lucide="trash"
                                                                                class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 mr-1 size-4"></i>
                                                                            Delete
                                                                        </a>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                            <% }) %>
                                                            <% } else { %>
                                                            <tr>
                                                                <td colspan="3" class="p-4 text-center opacity-70">
                                                                    <% if (typeof searchTerm !== 'undefined' && searchTerm) { %>
                                                                        Không tìm thấy danh mục nào với từ khóa "<%= searchTerm %>"
                                                                    <% } else { %>
                                                                        Không có dữ liệu
                                                                    <% } %>
                                                                </td>
                                                            </tr>
                                                            <% } %>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <!-- END: Data List -->
                                        </div>
                                    </div>
                                </div>
                        </div>
                    </div>
                </div>
                <%- include('../layout/js.ejs')%>
                    <!-- END: Pages, layouts, components JS Assets-->

                    <div id="delete-confirmation-dialog" class="modal" data-tw-backdrop="static" tabindex="-1" aria-hidden="true" style="display: none;">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-body p-0">
                                    <div class="p-5 text-center">
                                        <i data-lucide="x-circle" class="w-16 h-16 text-danger mx-auto mt-3"></i>
                                        <div class="text-3xl mt-5">Bạn có chắc chắn?</div>
                                        <div class="text-slate-500 mt-2">Bạn có chắc chắn muốn xóa danh mục <span id="category-name" class="font-medium"></span>? Hành động này không thể hoàn tác.</div>
                                    </div>
                                    <div class="px-5 pb-8 text-center">
                                        <button type="button" id="cancel-delete-btn" class="btn w-24 mr-1">Hủy</button>
                                        <button type="button" id="confirm-delete-btn" class="btn btn-danger w-24">Xóa</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <style>
                        .modal {
                            position: fixed;
                            top: 0;
                            left: 0;
                            width: 100%;
                            height: 100%;
                            background-color: rgba(0, 0, 0, 0.5);
                            z-index: 9999;
                        }
                        .modal-dialog {
                            position: relative;
                            width: auto;
                            margin: 1.75rem;
                            max-width: 500px;
                            margin-left: auto;
                            margin-right: auto;
                            margin-top: 10%;
                        }
                        .modal-content {
                            position: relative;
                            display: flex;
                            flex-direction: column;
                            width: 100%;
                            background-color: #fff;
                            border-radius: 0.5rem;
                            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
                        }
                        .btn {
                            display: inline-block;
                            padding: 0.5rem 1rem;
                            margin-bottom: 0;
                            font-size: 1rem;
                            font-weight: 400;
                            line-height: 1.5;
                            text-align: center;
                            text-decoration: none;
                            vertical-align: middle;
                            cursor: pointer;
                            border: 1px solid transparent;
                            border-radius: 0.25rem;
                            transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
                        }
                        .btn-danger {
                            color: #fff;
                            background-color: #dc3545;
                            border-color: #dc3545;
                        }
                        .btn-danger:hover {
                            color: #fff;
                            background-color: #c82333;
                            border-color: #bd2130;
                        }
                    </style>
                    
                    <script>
                        let categoryIdToDelete = null;
                        
                        function handleDeleteClick(e) {
                            e.preventDefault();
                            categoryIdToDelete = e.currentTarget.getAttribute('data-id');
                            const categoryName = e.currentTarget.getAttribute('data-name');
                            document.getElementById('category-name').textContent = categoryName;
                            
                            const modal = document.getElementById('delete-confirmation-dialog');
                            modal.style.display = 'block';
                            modal.style.zIndex = '9999';
                        }
                        
                        // Xử lý xác nhận xóa
                        function confirmDelete() {
                            if (categoryIdToDelete) {
                                fetch(`/admin/DeleteCategory/${categoryIdToDelete}`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    }
                                })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        showNotification('Xóa danh mục thành công!', 'success');
                                        // Reload trang sau khi xóa thành công
                                        setTimeout(() => {
                                            window.location.reload();
                                        }, 1500);
                                    } else {
                                        showNotification('Lỗi: ' + data.message, 'error');
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    showNotification('Đã xảy ra lỗi khi xóa danh mục', 'error');
                                });
                            }
                            
                            closeModal();
                        }
                        
                        // Đóng modal
                        function closeModal() {
                            const modal = document.getElementById('delete-confirmation-dialog');
                            modal.style.display = 'none';
                        }
                        
                        function showNotification(message, type = 'success') {
                            // Xóa notification cũ nếu có
                            const existingNotification = document.getElementById('dynamic-notification');
                            if (existingNotification) {
                                existingNotification.remove();
                            }
                            
                            const notificationHtml = `
                                <div id="dynamic-notification" class="mt-4 p-4 rounded-lg border-l-4 ${type === 'success' ? 'bg-green-50 border-green-400 text-green-700' : 'bg-red-50 border-red-400 text-red-700'}">
                                    <div class="flex">
                                        <div class="flex-shrink-0">
                                            <i data-lucide="${type === 'success' ? 'check-circle' : 'x-circle'}" class="h-5 w-5"></i>
                                        </div>
                                        <div class="ml-3">
                                            <p class="text-sm font-medium">${message}</p>
                                        </div>
                                        <div class="ml-auto pl-3">
                                            <div class="-mx-1.5 -my-1.5">
                                                <button type="button" onclick="closeNotification('dynamic-notification')" class="inline-flex rounded-md p-1.5 ${type === 'success' ? 'text-green-500 hover:bg-green-100' : 'text-red-500 hover:bg-red-100'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-${type === 'success' ? 'green' : 'red'}-50 focus:ring-${type === 'success' ? 'green' : 'red'}-600">
                                                    <i data-lucide="x" class="h-4 w-4"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;
                            
                            // Thêm notification vào sau tiêu đề
                            const title = document.querySelector('h2.mt-10.text-lg.font-medium');
                            title.insertAdjacentHTML('afterend', notificationHtml);
                            
                            // Auto hide sau 5 giây
                            setTimeout(() => {
                                closeNotification('dynamic-notification');
                            }, 5000);
                        }
                        
                        function closeNotification(notificationId = 'success-notification') {
                            const notification = document.getElementById(notificationId);
                            if (notification) {
                                notification.remove();
                            }
                        }
                        
                        let searchTimeout;
                        const searchInput = document.getElementById('search-input');
                        const tbody = document.querySelector('tbody');
                        const resultInfo = document.querySelector('.mx-auto.hidden.opacity-70');
                        
                        function updateTable(categories, searchTerm, totalItems) {
                            if (categories.length === 0) {
                                tbody.innerHTML = `
                                    <tr>
                                        <td colspan="3" class="p-4 text-center opacity-70">
                                            ${searchTerm ? `Không tìm thấy danh mục nào với từ khóa "${searchTerm}"` : 'Không có dữ liệu'}
                                        </td>
                                    </tr>
                                `;
                            } else {
                                tbody.innerHTML = categories.map((item, index) => `
                                    <tr class="transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted border-b-0">
                                        <td class="shadow-[3px_3px_5px_#0000000b] first:rounded-l-xl last:rounded-r-xl box rounded-none p-4 align-middle [&:has([role=checkbox])]:pr-0 border-y border-foreground/10 bg-background first:border-l last:border-r">
                                            ${index + 1}
                                        </td>
                                        <td class="shadow-[3px_3px_5px_#0000000b] first:rounded-l-xl last:rounded-r-xl box rounded-none p-4 align-middle [&:has([role=checkbox])]:pr-0 border-y border-foreground/10 bg-background first:border-l last:border-r">
                                            <div class="flex items-center justify-start">
                                                ${item.name}
                                            </div>
                                        </td>
                                        <td class="shadow-[3px_3px_5px_#0000000b] first:rounded-l-xl last:rounded-r-xl box rounded-none p-4 align-middle [&:has([role=checkbox])]:pr-0 border-y border-foreground/10 bg-background first:border-l last:border-r">
                                            <div class="flex items-center justify-center">
                                                <a class="mr-3 flex items-center" href="/admin/EditCategory/${item.id}">
                                                    <i data-lucide="check-square" class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 mr-1 size-4"></i>
                                                    Edit
                                                </a>
                                                <a class="text-danger flex items-center delete-category-btn" data-id="${item.id}" data-name="${item.name}" href="#">
                                                    <i data-lucide="trash" class="stroke-[1.5] [--color:currentColor] stroke-(--color) fill-(--color)/25 mr-1 size-4"></i>
                                                    Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                `).join('');
                                
                                // Re-attach delete event listeners
                                document.querySelectorAll('.delete-category-btn').forEach(btn => {
                                    btn.addEventListener('click', handleDeleteClick);
                                });
                            }
                            
                            // Update result info
                            if (searchTerm) {
                                resultInfo.textContent = `Hiển thị ${totalItems} kết quả cho "${searchTerm}"`;
                            } else {
                                resultInfo.textContent = `Hiển thị ${totalItems} danh mục`;
                            }
                        }
                        
                        function performSearch(searchValue) {
                            const url = searchValue ? `/admin/ListCategory?search=${encodeURIComponent(searchValue)}` : '/admin/ListCategory';
                            console.log('Searching for:', searchValue, 'URL:', url);
                            
                            fetch(url, {
                                method: 'GET',
                                headers: {
                                    'Accept': 'application/json',
                                    'X-Requested-With': 'XMLHttpRequest'
                                }
                            })
                            .then(response => {
                                console.log('Response status:', response.status);
                                return response.json();
                            })
                            .then(data => {
                                console.log('Response data:', data);
                                if (data.success) {
                                    updateTable(data.categories, data.searchTerm, data.totalItems);
                                } else {
                                    console.error('Search error:', data.message);
                                }
                            })
                            .catch(error => {
                                console.error('Search error:', error);
                            });
                        }
                        
                        if (searchInput) {
                            searchInput.addEventListener('input', function(e) {
                                const searchValue = e.target.value.trim();
                                
                                // Clear previous timeout
                                clearTimeout(searchTimeout);
                                
                                // Set new timeout for search
                                searchTimeout = setTimeout(() => {
                                    performSearch(searchValue);
                                }, 500); // Wait 500ms after user stops typing
                            });
                            
                            // Handle Enter key press
                            searchInput.addEventListener('keypress', function(e) {
                                if (e.key === 'Enter') {
                                    e.preventDefault();
                                    clearTimeout(searchTimeout);
                                    const searchValue = e.target.value.trim();
                                    performSearch(searchValue);
                                }
                            });
                        }

                        document.addEventListener('DOMContentLoaded', function() {
                            document.querySelectorAll('.delete-category-btn').forEach(btn => {
                                btn.addEventListener('click', handleDeleteClick);
                            });
                            
                            document.getElementById('confirm-delete-btn').addEventListener('click', confirmDelete);
                            
                            document.getElementById('cancel-delete-btn').addEventListener('click', closeModal);
                            
                            document.getElementById('delete-confirmation-dialog').addEventListener('click', function(e) {
                                if (e.target === this) {
                                    closeModal();
                                }
                            });
                            
                            // Auto hide notification từ server sau 5 giây
                            const serverNotification = document.getElementById('success-notification');
                            if (serverNotification) {
                                setTimeout(() => {
                                    closeNotification('success-notification');
                                }, 5000);
                            }
                        });
                    </script>
    </body>

    <!-- Mirrored from midone-html.left4code.com/enigma-side-menu-dashboard-overview-1-page.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 28 Aug 2025 16:29:44 GMT -->

    </html>